//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Components
{
    using Newtonsoft.Json;
    using Openapi.Models.Components;
    using Openapi.Utils;
    
    /// <summary>
    /// Encryption key information.
    /// </summary>
    public class EncryptionKey
    {

        /// <summary>
        /// Key type of the JWK, specifying the cryptographic algorithm family used with the key.
        /// </summary>
        [JsonProperty("kty")]
        public Kty Kty { get; set; } = default!;

        /// <summary>
        /// Identifies the intended use of the key. Values defined by this specification are sig (signature) and enc (encryption).
        /// </summary>
        [JsonProperty("use")]
        public Use Use { get; set; } = default!;

        /// <summary>
        /// Identifier of the key, serves as a unique identifier for the key.
        /// </summary>
        [JsonProperty("kid")]
        public string? Kid { get; set; } = null;

        /// <summary>
        /// Identifies the cryptographic algorithm family used with the key.<br/>
        /// 
        /// <remarks>
        /// If kty is set to RSA needs to be RSA-OAEP.<br/>
        /// If kty is set to EC needs to be ECDH-ES.
        /// </remarks>
        /// </summary>
        [JsonProperty("alg")]
        public Alg Alg { get; set; } = default!;

        /// <summary>
        /// The public exponent.<br/>
        /// 
        /// <remarks>
        /// Required if the Kty is RSA.
        /// </remarks>
        /// </summary>
        [JsonProperty("e")]
        public string? E { get; set; } = null;

        /// <summary>
        /// The modulus, a component that is used in both the encryption and decryption process.<br/>
        /// 
        /// <remarks>
        /// Required if the Kty is RSA.
        /// </remarks>
        /// </summary>
        [JsonProperty("n")]
        public string? N { get; set; } = null;

        /// <summary>
        /// Identifies the cryptographic curve used with the key.<br/>
        /// 
        /// <remarks>
        /// Required if the Kty is EC.
        /// </remarks>
        /// </summary>
        [JsonProperty("crv")]
        public string? Crv { get; set; } = null;

        /// <summary>
        /// Contains the x coordinate for the elliptic curve point.<br/>
        /// 
        /// <remarks>
        /// Required if the Kty is EC.
        /// </remarks>
        /// </summary>
        [JsonProperty("x")]
        public string? X { get; set; } = null;

        /// <summary>
        /// Contains the Y coordinate for the elliptic curve point.<br/>
        /// 
        /// <remarks>
        /// Required if the Kty is EC.
        /// </remarks>
        /// </summary>
        [JsonProperty("y")]
        public string? Y { get; set; } = null;

        /// <summary>
        /// Contains the private exponent parameter.<br/>
        /// 
        /// <remarks>
        /// This needs to be null.
        /// </remarks>
        /// </summary>
        [JsonProperty("d")]
        public string? D { get; set; } = null;
    }
}